apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: @app.name@
  name: @app.name@
  namespace: backend
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: @app.name@
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: @app.name@
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: namespace
                    operator: In
                    values:
                      - backend
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - @app.name@
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 1100
        runAsGroup: 1100
      containers:
        - name: @app.name@
          image: registry.cn-hangzhou.aliyuncs.com/mimiknight/kuca-monkey-service:20240913223300EPHQOKJR
          imagePullPolicy: IfNotPresent
          securityContext: {}
          ports:
            - name: https
              containerPort: 8443
              hostPort: 8443
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: "1024Mi"
            requests:
              cpu: "1"
              memory: "512Mi"
          livenessProbe:
            exec:
              command:
                - ./bin/service.sh
                - healthcheck
            initialDelaySeconds: 5
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 0
            failureThreshold: 1
          env: []
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: volume-log-dir
              mountPath: /opt/app/@app.name@/logs
            - name: volume-tmp-dir
              mountPath: /tmp
      volumes:
        - name: volume-log-dir
          hostPath:
            type: DirectoryOrCreate
            path: /opt/workspace/logs/@app.name@
        - name: volume-tmp-dir
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
