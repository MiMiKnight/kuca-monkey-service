<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--父项目-->
    <parent>
        <groupId>cn.mimiknight.developer</groupId>
        <artifactId>kuca-monkey-service-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <!--本工程-->
    <artifactId>kuca-monkey-service-core</artifactId>
    <packaging>jar</packaging>
    <name>service-core</name>
    <description>业务模块</description>

    <!--版本管理-->
    <properties>

    </properties>

    <!--引入依赖-->
    <dependencies>
        <dependency>
            <groupId>cn.mimiknight.developer</groupId>
            <artifactId>kuca-monkey-service-foundation</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.mimiknight.developer.kuca</groupId>
            <artifactId>kuca-ecology-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5 -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>5.3.1</version>
        </dependency>
    </dependencies>

    <!--构建管理-->
    <build>
        <!--配置target目录下生成jar包的名称-->
        <finalName>${app.jar.name}</finalName>
        <!--指定资源-->
        <resources>
            <!--非文本文件-->
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
                <filtering>false</filtering>
                <includes>
                    <include>https.keystore</include>
                </includes>
            </resource>
            <!--文本文件-->
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
                <filtering>true</filtering>
                <includes>
                    <include>bootstrap.properties</include>
                    <include>application.properties</include>
                    <include>application-debug.properties</include>
                    <include>logback-spring.xml</include>
                    <include>mybatis/mapper/**/*Mapper.xml</include>
                    <include>mybatis/mybatis-config.xml</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!--maven-compiler-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <!--注解处理器路径-->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!--maven-jar-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <includes>
                        <!--项目jar包中仅包含.class文件，配置文件单独放置在外部class-path路径中-->
                        <include>**/*.class</include>
                    </includes>
                    <!--项目jar包输出位置-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <archive>
                        <!-- 生成的jar中，包含pom.xml和pom.properties这两个文件 -->
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <manifest>
                            <!-- 启动类包路径 -->
                            <mainClass>${app.main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!--maven-assembly-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <!-- 将组装绑定到maven生命周期的哪一阶段 -->
                        <phase>package</phase>
                        <goals>
                            <!--single表示只运行一次-->
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--关闭id后缀-->
                    <appendAssemblyId>false</appendAssemblyId>
                    <!-- 压缩文件名 -->
                    <finalName>${app.name}-${app.build.version}</finalName>
                    <!-- 打包后的压缩包位置 -->
                    <outputDirectory>${project.parent.basedir}/.build</outputDirectory>
                    <descriptors>
                        <!-- 描述文件路径 -->
                        <descriptor>${project.parent.basedir}/deployment/release/conf/assembly-service.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <!--maven-clean-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <!--清理临时构建目录-->
                            <directory>${project.parent.basedir}/.build</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>